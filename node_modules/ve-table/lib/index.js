(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('numerify'), require('element-ui/lib/table'), require('element-ui/lib/table-column'), require('element-ui/lib/pagination')) :
  typeof define === 'function' && define.amd ? define(['numerify', 'element-ui/lib/table', 'element-ui/lib/table-column', 'element-ui/lib/pagination'], factory) :
  (global.VeTable = factory(global.numerify,global.ELEMENT.Table,global.ELEMENT.TableColumn,global.ELEMENT.Pagination));
}(this, (function (numerify,ElTable,ElTableColumn,ElPagination) { 'use strict';

  numerify = numerify && numerify.hasOwnProperty('default') ? numerify['default'] : numerify;
  ElTable = ElTable && ElTable.hasOwnProperty('default') ? ElTable['default'] : ElTable;
  ElTableColumn = ElTableColumn && ElTableColumn.hasOwnProperty('default') ? ElTableColumn['default'] : ElTableColumn;
  ElPagination = ElPagination && ElPagination.hasOwnProperty('default') ? ElPagination['default'] : ElPagination;

  function getType(v) {
    return Object.prototype.toString.call(v);
  }

  function isObject(v) {
    return getType(v) === '[object Object]';
  }

  function isArray(v) {
    return getType(v) === '[object Array]';
  }

  function clone(v) {
    if (isObject(v)) return Object.assign({}, v);
    if (isArray(v)) return v.slice();
    return v;
  }

  //

  var script = {
    name: 'VeTable',

    components: {
      ElTable: ElTable,
      ElTableColumn: ElTableColumn,
      ElPagination: ElPagination
    },

    props: {
      data: {
        type: Array,
        default: function _default() {
          return [];
        }
      },
      columns: {
        type: Array,
        default: function _default() {
          return [];
        }
      },
      keyProp: {
        type: String,
        default: '__index'
      },
      settings: {
        type: Object,
        default: function _default() {
          return {};
        }
      },
      total: {
        type: Number,
        default: 0
      },
      page: {
        type: Number,
        default: 1
      },
      pageSize: {
        type: Number,
        default: 0
      },
      pagination: {
        type: Object,
        default: function _default() {
          return {};
        }
      },
      valueFormat: {
        type: Function,
        default: null
      },
      paginationVisible: {
        type: Boolean,
        default: false
      }
    },

    computed: {
      innerColumns: function innerColumns(_ref) {
        var columns = _ref.columns,
            keyProp = _ref.keyProp,
            settings = _ref.settings;

        return columns.map(function (column, index) {
          var result = clone(column);
          if (!isObject(column)) result = { label: column, prop: column };
          result.__id = keyProp === '__auto' ? column.prop + '-' + index + '-' + Math.random() + '-' + Date.now() : keyProp === '__index' ? index : column[keyProp];
          result.__sortMethod = result.sortMethod || settings.__sortMethod || null;
          return result;
        });
      },


      innerPage: {
        get: function get$$1() {
          return this.page;
        },
        set: function set$$1(v) {
          this.$emit('update:page', v);
        }
      },

      innerPageSize: {
        get: function get$$1() {
          return this.pageSize || this.pagination.pageSize || this.globalSettings.pageSize;
        },
        set: function set$$1(v) {
          this.$emit('update:pageSize', v);
        }
      },

      pageSlots: function pageSlots(_ref2) {
        var pagination = _ref2.pagination;

        return pagination.__slots || [];
      },
      innerLayout: function innerLayout(_ref3) {
        var globalSettings = _ref3.globalSettings,
            pagination = _ref3.pagination;

        return globalSettings.layout || pagination.layout;
      },
      innerPageSizes: function innerPageSizes(_ref4) {
        var globalSettings = _ref4.globalSettings,
            pagination = _ref4.pagination;

        return globalSettings.pageSizes || pagination.pageSizes;
      }
    },

    created: function created() {
      this.globalSettings = window.VE_TABLE_DEFAULT || {};
    },


    methods: {
      sizeChangeHandler: function sizeChangeHandler(size) {
        this.innerPageSize = size;
      },
      getValue: function getValue(value, format) {
        return this.valueFormat ? this.valueFormat(value, format) : numerify(value, format);
      }
    }
  };

  /* script */
  var __vue_script__ = script;

  /* template */
  var __vue_render__ = function __vue_render__() {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", { staticClass: "ve-table" }, [_vm.settings.__tableSlot ? _vm._t("__tableSlot") : _c("el-table", _vm._g(_vm._b({ ref: "table", attrs: { data: _vm.data } }, "el-table", _vm.settings, false), _vm.$listeners), [_vm.settings.__showCheckbox ? _c("el-table-column", {
      attrs: {
        width: _vm.settings.__checkboxWidth || 55,
        type: "selection"
      }
    }) : _vm._e(), _vm._v(" "), _vm._l(_vm.innerColumns, function (column) {
      return _c("el-table-column", _vm._b({
        key: column.__id,
        scopedSlots: _vm._u([{
          key: "default",
          fn: function fn(ref) {
            var row = ref.row;
            return [column.__slot ? _vm._t(column.__slot, null, {
              row: row,
              column: column,
              value: row[column.prop]
            }) : column.__type === "number" && column.prop != null ? _c("div", [_vm._v("\n          " + _vm._s(_vm.getValue(row[column.prop], column.__format)) + "\n        ")]) : column.prop != null ? _c("div", [_vm._v("\n          " + _vm._s(row[column.prop]) + "\n        ")]) : _vm._e()];
          }
        }])
      }, "el-table-column", column, false));
    }), _vm._v(" "), _vm.settings.__expand ? _c("el-table-column", {
      attrs: { type: "expand" },
      scopedSlots: _vm._u([{
        key: "default",
        fn: function fn(ref) {
          var row = ref.row;
          return [_vm._t("__expand", null, { row: row })];
        }
      }])
    }) : _vm._e()], 2), _vm._v(" "), _vm.paginationVisible ? _c("el-pagination", _vm._b({
      attrs: {
        layout: _vm.innerLayout,
        "page-sizes": _vm.innerPageSizes,
        "page-size": _vm.innerPageSize,
        "current-page": _vm.innerPage,
        total: _vm.total
      },
      on: {
        "update:pageSize": function updatePageSize($event) {
          _vm.innerPageSize = $event;
        },
        "update:currentPage": function updateCurrentPage($event) {
          _vm.innerPage = $event;
        },
        "size-change": _vm.sizeChangeHandler
      }
    }, "el-pagination", _vm.pagination, false), [_vm._t("__paginationSlot")], 2) : _vm._e()], 2);
  };
  var __vue_staticRenderFns__ = [];
  __vue_render__._withStripped = true;

  /* style */
  var __vue_inject_styles__ = undefined;
  /* scoped */
  var __vue_scope_id__ = undefined;
  /* module identifier */
  var __vue_module_identifier__ = undefined;
  /* functional template */
  var __vue_is_functional_template__ = false;
  /* component normalizer */
  function __vue_normalize__(template, style, script$$1, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
    var component = (typeof script$$1 === 'function' ? script$$1.options : script$$1) || {};

    {
      component.__file = "/Users/quietcoder/Workspace/ve-table/src/ve-table.vue";
    }

    if (!component.render) {
      component.render = template.render;
      component.staticRenderFns = template.staticRenderFns;
      component._compiled = true;

      if (functional) component.functional = true;
    }

    component._scopeId = scope;

    return component;
  }
  /* style inject */
  function __vue_create_injector__() {
    var head = document.head || document.getElementsByTagName('head')[0];
    var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});
    var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

    return function addStyle(id, css) {
      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

      var group = isOldIE ? css.media || 'default' : id;
      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

      if (!style.ids.includes(id)) {
        var code = css.source;
        var index = style.ids.length;

        style.ids.push(id);

        if (isOldIE) {
          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
        }

        if (!style.element) {
          var el = style.element = document.createElement('style');
          el.type = 'text/css';

          if (css.media) el.setAttribute('media', css.media);
          if (isOldIE) {
            el.setAttribute('data-group', group);
            el.setAttribute('data-next-index', '0');
          }

          head.appendChild(el);
        }

        if (isOldIE) {
          index = parseInt(style.element.getAttribute('data-next-index'));
          style.element.setAttribute('data-next-index', index + 1);
        }

        if (style.element.styleSheet) {
          style.parts.push(code);
          style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
        } else {
          var textNode = document.createTextNode(code);
          var nodes = style.element.childNodes;
          if (nodes[index]) style.element.removeChild(nodes[index]);
          if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
        }
      }
    };
  }
  /* style inject SSR */

  var VeTable = __vue_normalize__({ render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ }, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, __vue_create_injector__, undefined);

  function install(Vue, _) {
    Vue.component(VeTable.name, VeTable);
  }

  if (typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  return VeTable;

})));
